{"ast":null,"code":"var _jsxFileName = \"F:\\\\Support-Desk-MERN\\\\support-desk\\\\frontend\\\\src\\\\pages\\\\Ticket.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport Modal from 'react-modal';\nimport { FaPlus } from 'react-icons/fa';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTicket, closeTicket } from '../features/tickets/ticketSlice';\nimport { getNotes, createNote, reset as notesReset } from '../features/notes/noteSlice';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport BackButton from '../components/BackButton';\nimport Spinner from '../components/Spinner';\nimport NoteItem from '../components/NoteItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    width: '600px',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    position: 'relative'\n  }\n};\nModal.setAppElement('#root');\n\nfunction Ticket() {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [noteText, setNoteText] = useState('');\n  const {\n    ticket,\n    isLoading,\n    isSuccess,\n    isError,\n    message\n  } = useSelector(state => state.tickets);\n  const {\n    notes,\n    isLoading: notesIsLoading\n  } = useSelector(state => state.notes);\n  const params = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    ticketId\n  } = useParams();\n  useEffect(() => {\n    if (isError) {\n      toast.error(message);\n    }\n\n    dispatch(getTicket(ticketId));\n    dispatch(getNotes(ticketId)); // eslint-disable-next-line\n  }, [isError, message, ticketId]); // Close ticket\n\n  const onTicketClose = () => {\n    dispatch(closeTicket(ticketId));\n    toast.success('Ticket Closed');\n    navigate('/tickets');\n  }; // Create note submit\n\n\n  const onNoteSubmit = e => {\n    e.preventDefault();\n    dispatch(createNote({\n      noteText,\n      ticketId\n    }));\n    closeModal();\n  }; // Open/close modal\n\n\n  const openModal = () => setModalIsOpen(true);\n\n  const closeModal = () => setModalIsOpen(false);\n\n  if (isLoading || notesIsLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Something Went Wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"ticket-header\",\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        url: \"/tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ticket ID: \", ticket._id, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status status-${ticket.status}`,\n          children: ticket.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Date Submitted: \", new Date(ticket.createdAt).toLocaleString('en-US')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Product: \", ticket.product]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description of Issue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ticket.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), ticket.status !== 'closed' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"btn\",\n      children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), \" Add Note\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Add Note\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-close\",\n        onClick: closeModal,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onNoteSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"noteText\",\n            id: \"noteText\",\n            className: \"form-control\",\n            placeholder: \"Note text\",\n            value: noteText,\n            onChange: e => setNoteText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(NoteItem, {\n      note: note\n    }, note._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)), ticket.status !== 'closed' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onTicketClose,\n      className: \"btn btn-block btn-danger\",\n      children: \"Close Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Ticket, \"FkyDFQXYNxTFbiwvPXI42s3mlTA=\", false, function () {\n  return [useSelector, useSelector, useParams, useNavigate, useDispatch, useParams];\n});\n\n_c = Ticket;\nexport default Ticket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ticket\");","map":{"version":3,"sources":["F:/Support-Desk-MERN/support-desk/frontend/src/pages/Ticket.jsx"],"names":["useEffect","useState","toast","Modal","FaPlus","useSelector","useDispatch","getTicket","closeTicket","getNotes","createNote","reset","notesReset","useParams","useNavigate","BackButton","Spinner","NoteItem","customStyles","content","width","top","left","right","bottom","marginRight","transform","position","setAppElement","Ticket","modalIsOpen","setModalIsOpen","noteText","setNoteText","ticket","isLoading","isSuccess","isError","message","state","tickets","notes","notesIsLoading","params","navigate","dispatch","ticketId","error","onTicketClose","success","onNoteSubmit","e","preventDefault","closeModal","openModal","_id","status","Date","createdAt","toLocaleString","product","description","target","value","map","note"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport Modal from 'react-modal'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getTicket, closeTicket } from '../features/tickets/ticketSlice'\r\nimport {\r\n  getNotes,\r\n  createNote,\r\n  reset as notesReset,\r\n} from '../features/notes/noteSlice'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport BackButton from '../components/BackButton'\r\nimport Spinner from '../components/Spinner'\r\nimport NoteItem from '../components/NoteItem'\r\n\r\nconst customStyles = {\r\n  content: {\r\n    width: '600px',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    position: 'relative',\r\n  },\r\n}\r\n\r\nModal.setAppElement('#root')\r\n\r\nfunction Ticket() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n  const [noteText, setNoteText] = useState('')\r\n  const { ticket, isLoading, isSuccess, isError, message } = useSelector(\r\n    (state) => state.tickets\r\n  )\r\n\r\n  const { notes, isLoading: notesIsLoading } = useSelector(\r\n    (state) => state.notes\r\n  )\r\n\r\n  const params = useParams()\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const { ticketId } = useParams()\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      toast.error(message)\r\n    }\r\n\r\n    dispatch(getTicket(ticketId))\r\n    dispatch(getNotes(ticketId))\r\n    // eslint-disable-next-line\r\n  }, [isError, message, ticketId])\r\n\r\n  // Close ticket\r\n  const onTicketClose = () => {\r\n    dispatch(closeTicket(ticketId))\r\n    toast.success('Ticket Closed')\r\n    navigate('/tickets')\r\n  }\r\n\r\n  // Create note submit\r\n  const onNoteSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createNote({ noteText, ticketId }))\r\n    closeModal()\r\n  }\r\n\r\n  // Open/close modal\r\n  const openModal = () => setModalIsOpen(true)\r\n  const closeModal = () => setModalIsOpen(false)\r\n\r\n  if (isLoading || notesIsLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h3>Something Went Wrong</h3>\r\n  }\r\n\r\n  return (\r\n    <div className='ticket-page'>\r\n      <header className='ticket-header'>\r\n        <BackButton url='/tickets' />\r\n        <h2>\r\n          Ticket ID: {ticket._id}\r\n          <span className={`status status-${ticket.status}`}>\r\n            {ticket.status}\r\n          </span>\r\n        </h2>\r\n        <h3>\r\n          Date Submitted: {new Date(ticket.createdAt).toLocaleString('en-US')}\r\n        </h3>\r\n        <h3>Product: {ticket.product}</h3>\r\n        <hr />\r\n        <div className='ticket-desc'>\r\n          <h3>Description of Issue</h3>\r\n          <p>{ticket.description}</p>\r\n        </div>\r\n        <h2>Notes</h2>\r\n      </header>\r\n\r\n      {ticket.status !== 'closed' && (\r\n        <button onClick={openModal} className='btn'>\r\n          <FaPlus /> Add Note\r\n        </button>\r\n      )}\r\n\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel='Add Note'\r\n      >\r\n        <h2>Add Note</h2>\r\n        <button className='btn-close' onClick={closeModal}>\r\n          X\r\n        </button>\r\n        <form onSubmit={onNoteSubmit}>\r\n          <div className='form-group'>\r\n            <textarea\r\n              name='noteText'\r\n              id='noteText'\r\n              className='form-control'\r\n              placeholder='Note text'\r\n              value={noteText}\r\n              onChange={(e) => setNoteText(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <div className='form-group'>\r\n            <button className='btn' type='submit'>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n\r\n      {notes.map((note) => (\r\n        <NoteItem key={note._id} note={note} />\r\n      ))}\r\n\r\n      {ticket.status !== 'closed' && (\r\n        <button onClick={onTicketClose} className='btn btn-block btn-danger'>\r\n          Close Ticket\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ticket\r\n"]},"metadata":{},"sourceType":"module"}